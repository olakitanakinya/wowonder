server {
    listen 80;
    server_name _;
    root /var/www/html;
    index index.php index.html;

    client_max_body_size 2024M;
    client_body_timeout 5000s;
    fastcgi_read_timeout 4000s;
    fastcgi_send_timeout 4000s;

    # Main location block
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP handling
    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PHP_VALUE "upload_max_filesize=2024M \n post_max_size=2024M \n max_execution_time=4000 \n max_input_time=5000 \n memory_limit=400M";
    }

    # Handle uploads directory
    location /upload/ {
        alias /var/www/html/upload/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri $uri/ =404;
    }

    # Handle assets
    location /assets/ {
        alias /var/www/html/assets/;
        expires 1y;
        add_header Cache-Control "public";
        try_files $uri $uri/ =404;
    }

    # Handle themes
    location /themes/ {
        alias /var/www/html/themes/;
        expires 1y;
        add_header Cache-Control "public";
        try_files $uri $uri/ =404;
    }

    # Security - deny access to sensitive directories
    location ~ /\.ht {
        deny all;
    }

    # Cache static files
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|woff|woff2|ttf|svg|eot|mp4|webm|ogg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri $uri/ =404;
    }

    # Wowonder specific rewrite rules
    # Password reset
    rewrite ^/password-reset/([^\/]+)(\/|)$ /index.php?link1=welcome&link2=password_reset&user_id=$1 last;

    # Home page
    rewrite ^/$ /index.php?link1=home last;

    # User profiles
    if (!-e $request_filename) {
        rewrite ^/@([^\/]+)(\/|)$ /index.php?link1=timeline&u=$1 last;
    }
    if (!-e $request_filename) {
        rewrite ^/([A-Za-z0-9_]+)/([^\/]+)(\/|)$ /index.php?link1=timeline&u=$1&type=$2 last;
    }
    if (!-e $request_filename) {
        rewrite ^/([^\/]+)(\/|)$ /index.php?link1=timeline&u=$1 last;
    }

    # Admin routes
    rewrite ^/admin-cp$ /admincp.php last;
    rewrite ^/admin-cp/(.*)$ /admincp.php?page=$1 last;

    # Start up
    rewrite ^/start-up(/?|)$ /index.php?link1=start-up last;

    # Search
    rewrite ^/search(/?|)$ /index.php?link1=search last;
    rewrite ^/search/([^\/]+)(\/|)$ /index.php?link1=search&query=$1 last;

    # Messages
    rewrite ^/messages/([^\/]+)(\/|)$ /index.php?link1=messages&user=$1 last;
    rewrite ^/messages(/?|)$ /index.php?link1=messages last;

    # Continue with other routes...
    rewrite ^/terms/([^\/]+)(\/|)$ /index.php?link1=terms&type=$1 last;
    rewrite ^/post/([^\/]+)(\/|)$ /index.php?link1=post&id=$1 last;
    rewrite ^/game/([^\/]+)(\/|)$ /index.php?link1=game&id=$1 last;
    rewrite ^/hashtag/([^\/]+)(\/|)$ /index.php?link1=hashtag&hash=$1 last;
    rewrite ^/p/([^\/]+)(\/|)$ /index.php?link1=page&p=$1 last;
    rewrite ^/g/([^\/]+)(\/|)$ /index.php?link1=group&g=$1 last;

    # API routes
    rewrite ^/api(/?|)$ /api-v2.php last;
    rewrite ^/api/([^\/]+)(\/|)$ /api-v2.php?type=$1 last;
}
