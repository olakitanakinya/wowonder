apiVersion: apps/v1
kind: Deployment
metadata:
  name: wowonder-app
  namespace: wowonder
  labels:
    app: wowonder-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wowonder-app
  template:
    metadata:
      labels:
        app: wowonder-app
    spec:
      containers:
      - name: wowonder-app
        image: PLACEHOLDER_IMAGE:latest
        ports:
        - containerPort: 80
        - containerPort: 9000
        env:
        - name: MYSQL_HOST
          value: "mysql-service"
        - name: MYSQL_DATABASE
          value: "wowonderdb"
        - name: MYSQL_USER
          value: "wowonderuser"
        - name: MYSQL_PASSWORD
          value: "Password123@24"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: wowonder-data
          mountPath: /var/www/html/upload
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        # Simpler readiness probe - just check if nginx is running
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "curl -f http://localhost/ || exit 1"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "pgrep nginx && pgrep php-fpm8.2"
          initialDelaySeconds: 45
          periodSeconds: 30
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - "curl -f http://localhost/ || exit 1"
          failureThreshold: 30
          periodSeconds: 10
      volumes:
      - name: wowonder-data
        persistentVolumeClaim:
          claimName: wowonder-pvc
      - name: nginx-config
        configMap:
          name: wowonder-nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: wowonder-service
  namespace: wowonder
spec:
  type: NodePort
  selector:
    app: wowonder-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30080
